@page "/accounts/create"
@inject BlazorApp.Data.DatingAppDbContext DB
@using BlazorApp.Models
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Account</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Account" OnValidSubmit="AddAccount" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" /> 
            <div class="mb-3">
                <label for="birthdate" class="form-label">BirthDate:</label> 
                <InputDate id="birthdate" @bind-Value="Account.BirthDate" class="form-control" /> 
                <ValidationMessage For="() => Account.BirthDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="username" class="form-label">UserName:</label> 
                <InputText id="username" @bind-Value="Account.UserName" class="form-control" /> 
                <ValidationMessage For="() => Account.UserName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Account.Email" class="form-control" /> 
                <ValidationMessage For="() => Account.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label> 
                <InputText id="password" @bind-Value="Account.Password" class="form-control" /> 
                <ValidationMessage For="() => Account.Password" class="text-danger" /> 
            </div>       
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/accounts">Back to List</a>
</div>

<!-- Modal for success message -->
@if (showSuccessModal)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Success</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <p>Successfully created account! You can log in now. <a href="/Accounts/Login">Click here to log in</a>.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
                    <button type="button" class="btn btn-primary" @onclick="LoginButton">Go to Login</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [SupplyParameterFromForm]
    public Account Account { get; set; } = new();

    private bool showSuccessModal = false;

    public async Task AddAccount()
    {
        Account.CreateDate = DateTime.Now; // Set the CreateDate here
        Account.Role = "User"; // Set the Role here
        DB.Accounts.Add(Account);
        await DB.SaveChangesAsync();
        showSuccessModal = true;
    }

    private void CloseModal()
    {
        showSuccessModal = false;
        NavigationManager.NavigateTo("/");
    }
    private void LoginButton()
    {
        showSuccessModal = false;
        NavigationManager.NavigateTo("/Accounts/Login");
    }
}
