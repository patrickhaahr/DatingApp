@page "/createprofile"
@using BlazorApp.Services
@using Microsoft.AspNetCore.Components.Authorization
@using BlazorApp.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject BlazorApp.Data.DatingAppDbContext DB
@using Microsoft.EntityFrameworkCore
@inject AccountService AccountService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@rendermode InteractiveServer

<EditForm Model="@Profile" OnValidSubmit="@AddProfile">
    <Antiforgery />
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText @bind-Value="Profile.NickName" placeholder="NickName" />
    <InputNumber @bind-Value="Profile.Height" placeholder="Height" />
    <InputNumber @bind-Value="Profile.Weight" placeholder="Weight" />
    <InputText @bind-Value="Profile.Pic" placeholder="Picture URL" />
    <InputText @bind-Value="Profile.Gender" placeholder="Gender" />

    <button type="submit">Create Profile</button>
</EditForm>

@code {
    public Profile Profile { get; set; } = new();

    private async Task AddProfile()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var account = await AccountService.GetAccountByUserNameAsync(user.Identity.Name);
            if (account != null)
            {
                Profile.AccountId = account.AccountId;
                Profile.BirthDate = account.BirthDate;

                DB.Profiles.Add(Profile);
                await DB.SaveChangesAsync();

                Console.WriteLine("Profile saved successfully"); // Logging for debugging
                NavigationManager.NavigateTo("/");
            }
            else
            {
                Console.WriteLine("Account not found"); // Logging for debugging
            }
        }
    }
}